@model EventSwift.Models.ClientDashboardViewModel

@{
    ViewBag.Title = "Client Dashboard";
    ViewBag.SkipNavbar = true;

    // Prepare the events list as a JSON string safely
    var eventsList = Model.Events.Select(e => new
    {
        id = e.Id,
        title = e.Title,
        start = e.StartDate?.ToString("yyyy-MM-dd"), // ✅ Use null-safe call
        extendedProps = new
        {
            status = e.Status ?? "Unknown",
        }
    }).ToList();



    var eventsJson = Newtonsoft.Json.JsonConvert.SerializeObject(eventsList);
}

<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>

<style>
    /* Calendar palette colors */
    .fc .fc-toolbar {
        background: var(--light-yellow);
        border-radius: 0.5rem;
        margin-bottom: 0.5rem;
        padding: 0.3rem 0.7rem;
    }
    .fc .fc-toolbar-title {
        color: var(--green);
        font-size: 1rem !important;
        font-weight: 600;
    }
    .fc .fc-button {
        background: var(--green);
        border: none;
        color: #fff;
        border-radius: 0.3rem;
        font-size: 0.85rem;
        margin: 0 0.1rem;
        transition: background 0.2s;
    }
    .fc .fc-button:hover, .fc .fc-button:focus {
        background: var(--orange);
        color: #fff;
    }
    .fc .fc-daygrid-day-number {
        color: var(--brown);
        font-size: 0.7rem !important;
    }
    .fc .fc-event {
        background: var(--orange) !important;
        border: 1px solid var(--brown) !important;
        color: #fff !important;
        border-radius: 0.3rem;
        padding: 2px 4px !important;
        font-size: 0.7rem !important;
    }
    .fc .fc-day-today {
        background: var(--light-yellow) !important;
    }
    .fc .fc-col-header-cell-cushion {
        color: var(--green);
        font-weight: 600;
    }
    /* End calendar palette */

    /* Navbar improvements */
    .custom-navbar {
        background: var(--light-yellow) !important;
        border-radius: 0.7rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.04);
        margin-bottom: 1.2rem;
        padding: 0.4rem 1.2rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
    .custom-navbar .navbar-brand {
        color: var(--green) !important;
        font-weight: bold;
        font-size: 1.1rem;
        letter-spacing: 1px;
    }
    .custom-navbar .nav-link, .custom-navbar .btn {
        color: var(--green) !important;
        font-size: 0.95rem;
        margin-left: 0.7rem;
    }
    .custom-navbar .btn {
        background: var(--orange);
        color: #fff !important;
        border-radius: 0.4rem;
        padding: 0.3rem 1rem;
        font-weight: 600;
        border: none;
    }
    .custom-navbar .btn:hover {
        background: var(--green);
        color: #fff !important;
    }

    /* Smaller font size for event titles */
    .fc .fc-event-title {
        font-size: 0.65rem !important;
    }

    /* Smaller font size for day numbers */
    .fc .fc-daygrid-day-number {
        font-size: 0.7rem !important;
    }

    /* Reduce event padding to make events smaller */
    .fc .fc-event {
        padding: 2px 4px !important;
    }

    /* Optional: reduce header font size */
    .fc .fc-toolbar-title {
        font-size: 1rem !important;
    }

    /* Container for calendar and event preview side-by-side */
    .calendar-container {
        display: flex;
        gap: 20px;
        max-width: 100%;
        border: 1px solid #ddd;
        padding: 10px;
        font-family: Arial, sans-serif;
        font-size: 0.85rem;
    }

    #calendar {
        flex: 1 1 600px;
        height: 400px;
        overflow: visible !important;
    }

    #eventPreview {
        flex: 0 0 280px;
        border-left: 1px solid #ccc;
        padding-left: 15px;
        font-size: 0.9rem;
    }

        #eventPreview h4 {
            margin-top: 0;
            margin-bottom: 10px;
            font-weight: 600;
        }

        #eventPreview p {
            margin: 5px 0;
        }

        /* Placeholder styling when no event is selected */
        #eventPreview.empty {
            color: #777;
            font-style: italic;
        }
</style>

<div class="d-flex">
    @Html.Partial("~/Views/Shared/_Sidebar.cshtml")

    <div class="flex-grow-1 p-2">
        @Html.Partial("~/Views/Shared/_Navbar.cshtml")

        <div class="d-flex align-items-center mb-3 w-100">
            <span class="p-1 px-2 rounded-3 w-100" style="background: #fff; color: var(--green); border: 2px solid var(--green); font-weight: 500; font-size: 1rem; display: flex; align-items: center; gap: 0.5rem; box-shadow: 0 2px 8px rgba(0,0,0,0.04);">
                <i class="bi bi-person-badge me-2" style="font-size: 1.1em; color: var(--green);"></i>
                Client Dashboard
            </span>
        </div>

        <div class="row">
            <div class="col-md-4 mb-3">
                <div class="card text-white d-flex flex-row align-items-center" style="background-color: var(--green);">
                    <div class="p-3">
                        <i class="bi bi-file-earmark-text display-6"></i>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title mb-1">My Proposals</h5>
                        <p class="card-text fs-3 mb-0">@Model.MyProposalsCount</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <div class="card text-white d-flex flex-row align-items-center" style="background-color: var(--orange);">
                    <div class="p-3">
                        <i class="bi bi-hourglass-split display-6"></i>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title mb-1">Pending Approvals</h5>
                        <p class="card-text fs-3 mb-0">@Model.PendingApprovalsCount</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <div class="card text-white d-flex flex-row align-items-center" style="background-color: var(--brown);">
                    <div class="p-3">
                        <i class="bi bi-x-circle display-6"></i>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title mb-1">Rejected Proposals</h5>
                        <p class="card-text fs-3 mb-0">@Model.RejectedProposalsCount</p>
                    </div>
                </div>
            </div>
        </div>

        <div class="calendar-container mt-3">
            <div id="calendar"></div>
            <div id="eventPreview" class="empty">
                <h4><i class="bi bi-calendar-event me-2"></i>Event Details</h4>
                <p><i class="bi bi-info-circle me-2"></i>Select an event on the calendar to see details here.</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var previewEl = document.getElementById('eventPreview');

            if (!calendarEl || !previewEl) {
                console.error("Required elements not found");
                return;
            }

            var events = @Html.Raw(eventsJson);

            function clearPreview() {
                previewEl.classList.add('empty');
                previewEl.innerHTML = `
                    <h4><i class="bi bi-calendar-event me-2"></i>Event Details</h4>
                    <p><i class="bi bi-info-circle me-2"></i>Select an event on the calendar to see details here.</p>
                `;
            }

            function showPreview(event) {
                previewEl.classList.remove('empty');
                previewEl.innerHTML = `
                    <h4>${event.title}</h4>
                    <p><strong>Date:</strong> ${event.startStr}</p>
                    <p><strong>Status:</strong> ${event.extendedProps.status}</p>
                `;
            }

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                height: 450,
                events: events,
                eventDidMount: function (info) {
                    var status = info.event.extendedProps.status;
                    if (status) {
                        info.el.setAttribute('title', 'Status: ' + status);
                    }
                },
                eventClick: function(info) {
                    showPreview(info.event);
                },
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,listWeek'
                }
            });

            calendar.render();

            clearPreview();
        });
    </script>
}
